;Introduction / Thesis

:I have never presented on this so things will probably be a bit rough.

:Does anybody use Windows' batch files? Show of hands.

:Does anybody not know what a batch file is?

:This seems like a good idea that I wanted to share.

:In most programming languages there's a concept of a function. This concept seems generally 
to be missing from batch file programming in the wild.

:I wrote batch files for years that were a mess. Not until I imposed a structure, did I become 
productive.

:So the lack of structure is a problem.



;How to Modularize

:(!qq)

:So let's structure that imposes the concept of a function. At the heart of Combosable Batch 
Files is the notion of a function.

:Does anyone know what any of these do?

goto %1

[label]

call %0 [label]

exit/b

:Explained:

goto %1 = is merely a function call

[label] = function name (which must be unique)

call %0 [label] = function call to another function in this batch file

exit/b - end of function

:Using these few simple commands can turn batch file programming into a structured 
environment.

:Wouldn't it be cool if we could juxtapose the command and code windows?

:goto %1 = label = function name = what I like to call a nickname



;Let's see Hello World

:Double click the shortcut to open up a blue command prompt.

:Do hello world.bat example

::correlation of percent 1 and first thing you type

::Is this goto confusing? I would argue no.

:Each function is a self-contained unit that should generally speaking, be short. If you need 
to do multiple things, you probably should break the function up. That is a good programming
practice in almost any language.



;How to Extend and Customize CBF, If You Care, Examples That Are Built on this Structure

:Setup Instructions

:For help: Use "/?". For example, at the c:\ prompt, type "m/?".

:For a list of CBF batch files, type "cbf" at the prompt.

:m.bat: methods/YOUR METHODS

::m/?: You don't need to care about all these functions because why? You're going to name your 
function, which is all you need to worry about.

:td and of

::td: Navigating

::possilbly framework's most used function

::fast navigation. You are assigning a shortcut to a unique nickname.

:sf: Web surfing

::c:\sf ttdc

::c:\sf cnn

::bookmarks

:n.bat: nicknames/properties/YOUR DATA

:I call your attention to goto %1 in m and n.

:The concpet of nicknames.

:How do I know where to surf to?



;Some Cool Batch Files, 2 Examples

:To see a table of contents list of off-the-shelf cbfs, type "cbf".

::All these batch files are built in a composable and structured way.

:I am constantly adding new batch files. I can't help myself.

:I don't like the windows file searcher in Windows Explorer.

:fs

::td xu, fs *.sln over 400 solutions!

::Could be used for song title searches, which I have doing for years.

:cs: ImageSource.FromUri



;Conclusion

:The composition structure is a tool that let's you know what's going on.

:Once you know the structure and the design philosophy, it's not complicated, right?

:Do you feel like you know what's going on with bat file? Is it predictable? Are you 
confident you know what the flow is?

:Helps to organize. Helps to remembering commands that you use.



;Preparation Reading for Me (!prep)

:Why are most long batch files overly complex? For the same reason, I would argue, that most 
long functions are. The problem is the LONG part. The solution is modularization.

:If only there were a way to separate out things into functions, like most programming 
languages.

:See Cory House's speaker resource: &chsr

:So you wanna give a tech talk? tech talk tips and tricks: 
https://www.happybearsoftware.com/tips-on-giving-your-first-technical-talk

:Tell a story. Perhaps you can show your editor side-by-side with the command line. I built 
mirror.bat for this purpose.



;EOF