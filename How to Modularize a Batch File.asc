;Introduction / Thesis

:This presentation is about a really old technology, Window's batch files. Does anybody use 
Windows' batch files? Show of hands.

:Does anybody not know what a batch file is?

:I am obsessed with batch files at the moment, hence this presentation.

:Many, many batch files I've seen in the wild are pretty messy. They are often quite long and 
not well structured. I know because I've written hundreds like them. I wrote batch files for 
years that were a mess. I like to think I'm a little better now.

:For Example, I googled "typical batch file" and this was the first hit:

https://www.instructables.com/id/5-Cool-Batch-Files/

"Image" typical.bat.

:The lack of structure is a problem and leads to hard to read and understand code.



;How to Modularize

:So let's impose some structure.

::In most programming languages there's a concept of a function.

::At the heart of Composable Batch Files is the enforcing the use of traditional functions
or code blocks.

:Anatomy of a function. Here are the basic structural elements:

::[label] = function name (which must be unique)

::call :[label] = function call to another function in this batch file.

::goto [label] = also a function call, does not return to caller

::exit/b - end of function. The lack of exit/b is the main culprit. Control returns back to 
the caller. MIA. Without ending functions, you have spaghetti code.

::Example:

:main_function

call :function_1
call :function_2
call :function_3

exit/b

:Using this simple structure can turn a batch file into a structured environment.



;Setup Instructions

:Add %COMPOSABLE_BATCH_FILES% as an environment variable or, at least, add it to your path.

:If you so choose, also add these environment variables for the following:

::cbf_default_browser

::cbf_default_text_editor

::cbf_default_repository_folder



;Let's See a Functionalized Hello World

:Double click the shortcut to open up a blue command prompt.

:Do hello world.bat example

::correlation of percent 1 and first thing you type

::Is this goto confusing? I would argue no.

:Each function is a self-contained unit that should generally speaking, be short. If you need 
to do multiple things, you probably should break the function up. That is a good programming
practice in almost any language.

:Notice exit/b.



;How to Extend and Customize CBF, If You Care, Examples That Are Built on this Structure

:For help: Use "/?". For example, at the c:\ prompt, type "m/?".

:goto %1 = label = function name = what I like to call a nickname

:cd versus td

:m.bat: methods/YOUR METHODS

::m/?: You don't need to care about all these functions because why? You're going to name your 
function, which is all you need to worry about.

::m foobar

:env

:td and of

::td: Navigating

::possilbly framework's most used functions

::fast navigation. You are assigning a shortcut to a unique nickname.

:sf: Web surfing

::c:\sf ttdc

::c:\sf cnn

::bookmarks

:n.bat: nicknames/properties/YOUR DATA

:The concept of nicknames.



;Some Cool Batch Files, 2 Examples

:For a list of CBF batch files, type "cbf" at the prompt.

:To see a table of contents list of off-the-shelf cbfs, type "cbf".

::All these batch files are built in a composable and structured way.

:I am constantly adding new batch files. I can't help myself.

:I don't like the windows file searcher in Windows Explorer.

:fs

::td xu, fs *.sln over 400 solutions!

::Could be used for song title searches.

:cs: ImageSource.FromUri



;Conclusion

:The composition structure shown is a tool that let's you know what's going on and should make 
the code more readable and easier to work with.



;Preparation Reading for Me (!prep)

:1985 first windows version 1 dos

:[I have never presented on this so things will probably be a bit rough.]

:focus is on readable composable code

:functionalized approach

:Redo Readme.md based to support this thesis.

:Helps to organize. Helps to remembering commands that you use.

:Do you feel like you know what's going on with bat file? Is it predictable? Are you 
confident you know what the flow is?

:Once you know the structure and the design philosophy, it's not complicated, right?

:Wouldn't it be cool if we could juxtapose the command and code windows?

:Why are most long batch files overly complex? For the same reason, I would argue, that most 
long functions are. The problem is the LONG part. The solution is modularization.

:If only there were a way to separate out things into functions, like most programming 
languages.

:See Cory House's speaker resource: &chsr

:So you wanna give a tech talk? tech talk tips and tricks: 
https://www.happybearsoftware.com/tips-on-giving-your-first-technical-talk

:Tell a story. Perhaps you can show your editor side-by-side with the command line. I built 
mirror.bat for this purpose.



;EOF