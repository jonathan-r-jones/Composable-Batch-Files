;Introduction

:Tell a story.

:Why are most long batch files overly complex? For the same reason, I would argue, that most 
long functions. The problem is the LONG part. The solution is modularization.

:If only there were a way to separate out things into functions, like most programming 
languages.

:Set default browser to IE.



;Chapter 1 - How to Modularize

4 of the coolest things to know about a batch file:

batch file labels

exit /b

goto %1

call %0

:label = goto %1 = function name

:exit /b = }

:Just like a function, a batch file label must be unique within a file.

:empty function, somewhat arbitrary

::full function

::anatomy of a function

:no concept of a function. So let's change that. At the heart of Combosable Batch File 
Framework is the notion of a function, do something and get out. Master the command line.

::goto %1 in large letters. Does anyone know what this does in a batch file.



;Chapter 2 - Let's See Some Action

:g.bat

::log

::status

::rollback

::Own it. This is how I think about it. Very powerful for remembering things.

::multiple aliases



;Chapter 3 - Some Cool Examples

:Do the sln search in xu like I did for Andrew.

::Could be used for music which I hvae doing for years.

c:\cbf

:framework is built on this foundation

fs

cs



;Chapter 4 - How to Customize CBF

:Perhaps showing an example of how one might use the end product might be good way to 
illustrate. Show Xamarin Essentials.

:call your attention to goto %1 in g, m and n

The concpet of nicknames.

How do I know where to surf to?

m.bat: methods/YOUR METHODS

n.bat: nicknames/properties/YOUR DATA

Remember to goto %1



;Conclusion

:If I told you n.bat was a million lines long, would you care?

:Do you feel like you know what's going on with bat file? Is it predictable? Are you 
confident you know what the fliw is? Simple right?

:being organizes, remembering!

:Closing Credits

c:\sf clcr



;EOF